{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ws-react\\\\portfolio\\\\src\\\\Site\\\\pages\\\\Projetos\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projetos() {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    const fetchRepositories = async () => {\n      try {\n        // Substitua 'seu-usuario' pelo seu nome de usuário do GitHub\n        const response = await axios.get(\"https://api.github.com/users/seu-usuario/repos\");\n        const repositoriesWithImages = await Promise.all(response.data.map(async repo => {\n          const repoDetails = await axios.get(repo.url);\n          return {\n            ...repo,\n            image_url: `${repoDetails.data.html_url}/blob/master/${repo.name}.jpg?raw=true`\n          };\n        }));\n        setRepositories(repositoriesWithImages);\n      } catch (error) {\n        console.error(\"Erro ao obter a lista de repositórios\", error);\n      }\n    };\n    fetchRepositories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Lista de Reposit\\xF3rios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), repositories.map(repo => /*#__PURE__*/_jsxDEV(Card, {\n      name: repo.name,\n      description: repo.description,\n      html_url: repo.html_url,\n      image_url: repo.image_url\n    }, repo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Projetos, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n_c = Projetos;\nexport default Projetos;\nvar _c;\n$RefreshReg$(_c, \"Projetos\");","map":{"version":3,"names":["React","useState","useEffect","axios","Card","jsxDEV","_jsxDEV","Projetos","_s","repositories","setRepositories","fetchRepositories","response","get","repositoriesWithImages","Promise","all","data","map","repo","repoDetails","url","image_url","html_url","name","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","description","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ws-react/portfolio/src/Site/pages/Projetos/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"./Card\";\r\n\r\nfunction Projetos() {\r\n  const [repositories, setRepositories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchRepositories = async () => {\r\n      try {\r\n        // Substitua 'seu-usuario' pelo seu nome de usuário do GitHub\r\n        const response = await axios.get(\r\n          \"https://api.github.com/users/seu-usuario/repos\"\r\n        );\r\n\r\n        const repositoriesWithImages = await Promise.all(\r\n          response.data.map(async (repo) => {\r\n            const repoDetails = await axios.get(repo.url);\r\n            return {\r\n              ...repo,\r\n              image_url: `${repoDetails.data.html_url}/blob/master/${repo.name}.jpg?raw=true`,\r\n            };\r\n          })\r\n        );\r\n\r\n        setRepositories(repositoriesWithImages);\r\n      } catch (error) {\r\n        console.error(\"Erro ao obter a lista de repositórios\", error);\r\n      }\r\n    };\r\n\r\n    fetchRepositories();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Lista de Repositórios</h1>\r\n      {repositories.map((repo) => (\r\n        <Card\r\n          key={repo.id}\r\n          name={repo.name}\r\n          description={repo.description}\r\n          html_url={repo.html_url}\r\n          image_url={repo.image_url}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projetos;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACd,MAAMS,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAC9B,gDACF,CAAC;QAED,MAAMC,sBAAsB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC9CJ,QAAQ,CAACK,IAAI,CAACC,GAAG,CAAC,MAAOC,IAAI,IAAK;UAChC,MAAMC,WAAW,GAAG,MAAMjB,KAAK,CAACU,GAAG,CAACM,IAAI,CAACE,GAAG,CAAC;UAC7C,OAAO;YACL,GAAGF,IAAI;YACPG,SAAS,EAAG,GAAEF,WAAW,CAACH,IAAI,CAACM,QAAS,gBAAeJ,IAAI,CAACK,IAAK;UACnE,CAAC;QACH,CAAC,CACH,CAAC;QAEDd,eAAe,CAACI,sBAAsB,CAAC;MACzC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;MAC/D;IACF,CAAC;IAEDd,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BtB,YAAY,CAACS,GAAG,CAAEC,IAAI,iBACrBb,OAAA,CAACF,IAAI;MAEHoB,IAAI,EAAEL,IAAI,CAACK,IAAK;MAChBQ,WAAW,EAAEb,IAAI,CAACa,WAAY;MAC9BT,QAAQ,EAAEJ,IAAI,CAACI,QAAS;MACxBD,SAAS,EAAEH,IAAI,CAACG;IAAU,GAJrBH,IAAI,CAACc,EAAE;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKb,CACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CA5CQD,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA8CjB,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}