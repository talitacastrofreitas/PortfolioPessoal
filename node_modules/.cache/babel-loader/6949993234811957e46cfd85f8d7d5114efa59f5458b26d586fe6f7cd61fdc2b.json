{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ws-react\\\\portfolio\\\\src\\\\Site\\\\pages\\\\Projetos\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Card from './components/card';\nimport './projetos.css';\nimport Header from './components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projetos() {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    const buscarRepositorios = async () => {\n      try {\n        const resposta = await fetch('https://api.github.com/users/talitacastrofreitas/repos');\n        const dados = await resposta.json();\n        const repositoriosComImagens = await Promise.all(dados.map(async repo => {\n          // Buscar o conteúdo do README.md\n          const readmeResponse = await fetch(`https://raw.githubusercontent.com/talitacastrofreitas/${repo.full_name}/master/README.md`);\n          const readmeContent = await readmeResponse.text();\n\n          // Extrair a URL da imagem do README.md\n          const imageUrlMatch = readmeContent.match(/!\\[.*\\]\\((.*)\\)/);\n          const imageUrl = imageUrlMatch ? imageUrlMatch[1] : null;\n          return {\n            ...repo,\n            image_url: imageUrl\n          };\n        }));\n        setRepositories(repositoriosComImagens);\n      } catch (error) {\n        console.error('Erro ao obter a lista de repositórios', error);\n      }\n    };\n    buscarRepositorios();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white mb-4\",\n        children: \"PROJETOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: repositories.length > 0 ? repositories.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            social_preview: repo.social_preview,\n            name: repo.name,\n            description: repo.description,\n            html_url: repo.html_url,\n            image_url: repo.image_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white\",\n          children: \"Carregando reposit\\xF3rios...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Projetos, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n_c = Projetos;\nexport default Projetos;\nvar _c;\n$RefreshReg$(_c, \"Projetos\");","map":{"version":3,"names":["useEffect","useState","Card","Header","jsxDEV","_jsxDEV","Projetos","_s","repositories","setRepositories","buscarRepositorios","resposta","fetch","dados","json","repositoriosComImagens","Promise","all","map","repo","readmeResponse","full_name","readmeContent","text","imageUrlMatch","match","imageUrl","image_url","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","social_preview","name","description","html_url","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ws-react/portfolio/src/Site/pages/Projetos/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Card from './components/card';\r\nimport './projetos.css';\r\nimport Header from './components/header';\r\n\r\nfunction Projetos() {\r\n  const [repositories, setRepositories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const buscarRepositorios = async () => {\r\n      try {\r\n        const resposta = await fetch('https://api.github.com/users/talitacastrofreitas/repos');\r\n        const dados = await resposta.json();\r\n\r\n        const repositoriosComImagens = await Promise.all(\r\n          dados.map(async (repo) => {\r\n            // Buscar o conteúdo do README.md\r\n            const readmeResponse = await fetch(`https://raw.githubusercontent.com/talitacastrofreitas/${repo.full_name}/master/README.md`);\r\n            const readmeContent = await readmeResponse.text();\r\n\r\n            // Extrair a URL da imagem do README.md\r\n            const imageUrlMatch = readmeContent.match(/!\\[.*\\]\\((.*)\\)/);\r\n            const imageUrl = imageUrlMatch ? imageUrlMatch[1] : null;\r\n\r\n            return {\r\n              ...repo,\r\n              image_url: imageUrl,\r\n            };\r\n          })\r\n        );\r\n\r\n        setRepositories(repositoriosComImagens);\r\n      } catch (error) {\r\n        console.error('Erro ao obter a lista de repositórios', error);\r\n      }\r\n    };\r\n\r\n    buscarRepositorios();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container mt-4\">\r\n        <h2 className=\"text-white mb-4\">PROJETOS</h2>\r\n        <div className=\"row\">\r\n          {repositories.length > 0 ? (\r\n            repositories.map((repo) => (\r\n              <div key={repo.id} className=\"col-lg-3 mb-3\">\r\n                <Card social_preview={repo.social_preview} name={repo.name} description={repo.description} html_url={repo.html_url} image_url={repo.image_url} />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-white\">Carregando repositórios...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projetos;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}