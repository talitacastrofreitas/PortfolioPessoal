{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\ws-react\\\\portfolio\\\\src\\\\Site\\\\pages\\\\Projetos\\\\index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport Card from './components/card';\nimport './projetos.css';\nimport Header from './components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Projetos() {\n  _s();\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    const buscarRepositorios = async () => {\n      try {\n        const resposta = await fetch('https://api.github.com/users/talitacastrofreitas/repos');\n        const dados = await resposta.json();\n        const repositoriosComImagens = await Promise.all(dados.map(async repo => {\n          const readmeResponse = await fetch(`https://raw.githubusercontent.com/${repo.full_name}/main/README.md`);\n          const readmeContent = await readmeResponse.text();\n\n          // Aqui, você precisará implementar uma lógica para extrair a URL da imagem do conteúdo do README.md\n          // A lógica abaixo é um exemplo simples e pode precisar ser adaptada conforme a estrutura do seu README.md.\n          const matches = readmeContent.match(/!\\[.*?\\]\\((.*?)\\)/);\n          return {\n            ...repo,\n            image_url: matches ? matches[1] : null\n          };\n        }));\n        setRepositories(repositoriosComImagens);\n      } catch (error) {\n        console.error('Erro ao buscar repositórios', error);\n      }\n    };\n    buscarRepositorios();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white mb-4\",\n        children: \"PROJETOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: repositories.length > 0 ? repositories.map(repo => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-3 mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            social_preview: repo.social_preview,\n            name: repo.name,\n            description: repo.description,\n            html_url: repo.html_url,\n            image_url: repo.image_url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this)\n        }, repo.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-white\",\n          children: \"Carregando reposit\\xF3rios...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(Projetos, \"BOCi1fzyIWTfYUJ6DGWtKZ5UKvY=\");\n_c = Projetos;\nexport default Projetos;\nvar _c;\n$RefreshReg$(_c, \"Projetos\");","map":{"version":3,"names":["useEffect","useState","Card","Header","jsxDEV","_jsxDEV","Projetos","_s","repositories","setRepositories","buscarRepositorios","resposta","fetch","dados","json","repositoriosComImagens","Promise","all","map","repo","readmeResponse","full_name","readmeContent","text","matches","match","image_url","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","social_preview","name","description","html_url","id","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/ws-react/portfolio/src/Site/pages/Projetos/index.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Card from './components/card';\r\nimport './projetos.css';\r\nimport Header from './components/header';\r\n\r\nfunction Projetos() {\r\n  const [repositories, setRepositories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const buscarRepositorios = async () => {\r\n      try {\r\n        const resposta = await fetch('https://api.github.com/users/talitacastrofreitas/repos');\r\n        const dados = await resposta.json();\r\n\r\n        const repositoriosComImagens = await Promise.all(\r\n          dados.map(async (repo) => {\r\n            const readmeResponse = await fetch(`https://raw.githubusercontent.com/${repo.full_name}/main/README.md`);\r\n            const readmeContent = await readmeResponse.text();\r\n\r\n            // Aqui, você precisará implementar uma lógica para extrair a URL da imagem do conteúdo do README.md\r\n            // A lógica abaixo é um exemplo simples e pode precisar ser adaptada conforme a estrutura do seu README.md.\r\n            const matches = readmeContent.match(/!\\[.*?\\]\\((.*?)\\)/);\r\n\r\n            return {\r\n              ...repo,\r\n              image_url: matches ? matches[1] : null,\r\n            };\r\n          })\r\n        );\r\n\r\n        setRepositories(repositoriosComImagens);\r\n      } catch (error) {\r\n        console.error('Erro ao buscar repositórios', error);\r\n      }\r\n    };\r\n\r\n    buscarRepositorios();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <div className=\"container mt-4\">\r\n        <h2 className=\"text-white mb-4\">PROJETOS</h2>\r\n        <div className=\"row\">\r\n          {repositories.length > 0 ? (\r\n            repositories.map((repo) => (\r\n              <div key={repo.id} className=\"col-lg-3 mb-3\">\r\n                <Card\r\n                  social_preview={repo.social_preview}\r\n                  name={repo.name}\r\n                  description={repo.description}\r\n                  html_url={repo.html_url}\r\n                  image_url={repo.image_url}\r\n                />\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p className=\"text-white\">Carregando repositórios...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Projetos;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAO,gBAAgB;AACvB,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wDAAwD,CAAC;QACtF,MAAMC,KAAK,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAEnC,MAAMC,sBAAsB,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC9CJ,KAAK,CAACK,GAAG,CAAC,MAAOC,IAAI,IAAK;UACxB,MAAMC,cAAc,GAAG,MAAMR,KAAK,CAAE,qCAAoCO,IAAI,CAACE,SAAU,iBAAgB,CAAC;UACxG,MAAMC,aAAa,GAAG,MAAMF,cAAc,CAACG,IAAI,CAAC,CAAC;;UAEjD;UACA;UACA,MAAMC,OAAO,GAAGF,aAAa,CAACG,KAAK,CAAC,mBAAmB,CAAC;UAExD,OAAO;YACL,GAAGN,IAAI;YACPO,SAAS,EAAEF,OAAO,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAG;UACpC,CAAC;QACH,CAAC,CACH,CAAC;QAEDf,eAAe,CAACM,sBAAsB,CAAC;MACzC,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IAEDjB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAwB,QAAA,gBACExB,OAAA,CAACF,MAAM;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV5B,OAAA;MAAK6B,SAAS,EAAC,gBAAgB;MAAAL,QAAA,gBAC7BxB,OAAA;QAAI6B,SAAS,EAAC,iBAAiB;QAAAL,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7C5B,OAAA;QAAK6B,SAAS,EAAC,KAAK;QAAAL,QAAA,EACjBrB,YAAY,CAAC2B,MAAM,GAAG,CAAC,GACtB3B,YAAY,CAACU,GAAG,CAAEC,IAAI,iBACpBd,OAAA;UAAmB6B,SAAS,EAAC,eAAe;UAAAL,QAAA,eAC1CxB,OAAA,CAACH,IAAI;YACHkC,cAAc,EAAEjB,IAAI,CAACiB,cAAe;YACpCC,IAAI,EAAElB,IAAI,CAACkB,IAAK;YAChBC,WAAW,EAAEnB,IAAI,CAACmB,WAAY;YAC9BC,QAAQ,EAAEpB,IAAI,CAACoB,QAAS;YACxBb,SAAS,EAAEP,IAAI,CAACO;UAAU;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B;QAAC,GAPMd,IAAI,CAACqB,EAAE;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQZ,CACN,CAAC,gBAEF5B,OAAA;UAAG6B,SAAS,EAAC,YAAY;UAAAL,QAAA,EAAC;QAA0B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MACxD;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAC1B,EAAA,CA3DQD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA6DjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}